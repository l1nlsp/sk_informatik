<?xml version="1.0" encoding="UTF-8"?>
<root xmlns:nsd="https://structorizer.fisch.lu" version="3.31-04" preRepeat="bis" postFor="bis" preReturn="zurück" postForIn="in" preWhile="solange" output="Ausgabe" input="Eingabe" preAlt="wenn" preFor="für" preExit="beende" preLeave="verlasse" ignoreCase="true" preThrow="eskaliere" preForIn="für alle" stepFor="Schritt" author="l1nlsp" created="2022-01-20" changedby="l1nlsp" changed="2022-01-23" origin="Structorizer 3.31-04" text="&#34;Addition_von_Bruechen&#34;" comment="&#34;Teorie: ggt(m,n)*kgV(m,n)=m*n&#34;,&#34;z1,n1,z2,n2 E N&#34;" color="ffffff" type="program" style="nice">
	<children>
		<instruction text="&#34;Eingabe Z1,N1,Z2,N2&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<instruction text="&#34;Zer &#60;- Z1*N2+Z2*N1&#34;,&#34;Ner &#60;- N2*N1&#34;" comment="" color="ffffff" rotated="0" disabled="0"></instruction>
		<alternative text="&#34;Zer&#62;Ner&#34;" comment="" color="ffffff" disabled="0">
			<qTrue>
				<call text="&#34;ggT &#60;- ggt(Zer,Ner)&#34;" comment="&#34;&#34;" color="ffffff" disabled="0" ismethoddecl="0"></call>
			</qTrue>
			<qFalse>
				<call text="&#34;ggT &#60;- ggt(Ner,Zer)&#34;" comment="&#34;&#34;" color="ffffff" disabled="0" ismethoddecl="0"></call>
			</qFalse>
		</alternative>
		<alternative text="&#34;Ner = ggT&#34;" comment="&#34;&#34;" color="ffffff" disabled="0">
			<qTrue>
				<instruction text="&#34;Ausgabe Z1,&#34;&#34;/&#34;&#34;,N1,&#34;&#34; + &#34;&#34;,Z2,&#34;&#34;/&#34;&#34;,N2,&#34;&#34; = &#34;&#34;,Zer/ggT&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
			</qTrue>
			<qFalse>
				<instruction text="&#34;Ausgabe Z1,&#34;&#34;/&#34;&#34;,N1,&#34;&#34; + &#34;&#34;,Z2,&#34;&#34;/&#34;&#34;,N2,&#34;&#34; = &#34;&#34;,Zer/ggT,&#34;&#34;/&#34;&#34;,Ner/ggT&#34;" comment="&#34;&#34;" color="ffffff" rotated="0" disabled="0"></instruction>
			</qFalse>
		</alternative>
	</children>
</root>